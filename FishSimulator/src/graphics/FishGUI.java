///*
// * To change this template, choose Tools | Templates
// * and open the template in the editor.
// */
//package graphics;
//import java.util.LinkedList;
//import java.util.Random;
//
//import engine.Tank;
//import fish.Fish;
//import fish.Guppy;
//
///**
// *
// * @author Rachel
// */
//
//public class FishGUI extends javax.swing.JFrame {
//    /**
//     * Creates new form FishGUI
//     */
//    
//    Tank userTank;
//    String flag;
//    String flag2;
//    LinkedList<Fish> allPossible; //each type of fish
//    Fish maybe; //pending fish
//    LinkedList<javax.swing.JLabel> allSprites = new LinkedList<javax.swing.JLabel>();
//    
//    public FishGUI() {
//        initComponents();
//        scrollOptions.setVisible(false);
//        scrollInTank.setVisible(false);
//        hideTop();        
//        hideBottom();
//        output.setText("Start by pressing make tank!");
//        flag2="main";
//        
//        allPossible = new LinkedList<Fish>();
//        allSprites = new LinkedList<javax.swing.JLabel>();  
//        initAllPossible();
//        initAllSprites();     
//    }
//
//    /**
//     * This method is called from within the constructor to initialize the form.
//     * WARNING: Do NOT modify this code. The content of this method is always
//     * regenerated by the Form Editor.
//     */
//    @SuppressWarnings("unchecked")
//    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
//    private void initComponents() {
//
//        jLayeredPane1 = new javax.swing.JLayeredPane();
//        previewPane = new javax.swing.JPanel();
//        healthBar = new javax.swing.JProgressBar();
//        hungerBar = new javax.swing.JProgressBar();
//        happinessBar = new javax.swing.JProgressBar();
//        statusInfo2 = new javax.swing.JTextArea();
//        statusInfo1 = new javax.swing.JTextArea();
//        tankVisuals = new javax.swing.JLayeredPane();
//        scrollOptions = new javax.swing.JScrollPane();
//        fishOptions = new javax.swing.JList();
//        scrollInTank = new javax.swing.JScrollPane();
//        fishInTank = new javax.swing.JList();
//        addFish = new javax.swing.JButton();
//        feedFish = new javax.swing.JButton();
//        cleanTank = new javax.swing.JButton();
//        changeWater = new javax.swing.JButton();
//        checkStatus = new javax.swing.JButton();
//        elapseTime = new javax.swing.JButton();
//        makeTank = new javax.swing.JButton();
//        help = new javax.swing.JButton();
//        sliderMax = new javax.swing.JLabel();
//        sliderMin = new javax.swing.JLabel();
//        inputField1 = new javax.swing.JTextField();
//        slider1 = new javax.swing.JSlider();
//        option5 = new javax.swing.JButton();
//        option2 = new javax.swing.JButton();
//        option3 = new javax.swing.JButton();
//        option4 = new javax.swing.JButton();
//        option1 = new javax.swing.JButton();
//        scrollOutput = new javax.swing.JScrollPane();
//        output = new javax.swing.JTextArea();
//        addBG = new javax.swing.JLabel();
//
//        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
//        setResizable(false);
//
//        previewPane.setBackground(new java.awt.Color(147, 224, 224));
//
//        javax.swing.GroupLayout previewPaneLayout = new javax.swing.GroupLayout(previewPane);
//        previewPane.setLayout(previewPaneLayout);
//        previewPaneLayout.setHorizontalGroup(
//            previewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 210, Short.MAX_VALUE)
//        );
//        previewPaneLayout.setVerticalGroup(
//            previewPaneLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addGap(0, 100, Short.MAX_VALUE)
//        );
//
//        previewPane.setBounds(460, 170, 210, 100);
//        jLayeredPane1.add(previewPane, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        healthBar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
//        healthBar.setMaximum(5);
//        healthBar.setString("Health");
//        healthBar.setStringPainted(true);
//        healthBar.setBounds(180, 160, 146, 20);
//        jLayeredPane1.add(healthBar, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        hungerBar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
//        hungerBar.setString("Hunger");
//        hungerBar.setStringPainted(true);
//        hungerBar.setBounds(180, 190, 146, 20);
//        jLayeredPane1.add(hungerBar, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        happinessBar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
//        happinessBar.setString("Happiness");
//        happinessBar.setStringPainted(true);
//        happinessBar.setBounds(180, 220, 146, 20);
//        jLayeredPane1.add(happinessBar, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        statusInfo2.setBackground(new java.awt.Color(147, 224, 224));
//        statusInfo2.setColumns(20);
//        statusInfo2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
//        statusInfo2.setForeground(new java.awt.Color(102, 102, 102));
//        statusInfo2.setRows(5);
//        statusInfo2.setBorder(null);
//        statusInfo2.setBounds(440, 20, 260, 250);
//        jLayeredPane1.add(statusInfo2, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        statusInfo1.setBackground(new java.awt.Color(147, 224, 224));
//        statusInfo1.setColumns(20);
//        statusInfo1.setForeground(new java.awt.Color(102, 102, 102));
//        statusInfo1.setRows(5);
//        statusInfo1.setBorder(null);
//        statusInfo1.setBounds(180, 20, 510, 250);
//        jLayeredPane1.add(statusInfo1, javax.swing.JLayeredPane.DEFAULT_LAYER);
//        tankVisuals.setBounds(170, 19, 534, 254);
//        jLayeredPane1.add(tankVisuals, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        scrollOptions.setBorder(null);
//
//        fishOptions.setBackground(new java.awt.Color(75, 188, 212));
//        fishOptions.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
//        fishOptions.setForeground(new java.awt.Color(102, 102, 102));
//        fishOptions.setModel(new javax.swing.AbstractListModel() {
//            String[] strings = { "Fish Options", "Cherry Barb", "Guppy", "White Cloud Minnow" };
//            public int getSize() { return strings.length; }
//            public Object getElementAt(int i) { return strings[i]; }
//        });
//        fishOptions.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
//        fishOptions.setVisibleRowCount(20);
//        fishOptions.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
//            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
//                fishOptionsValueChanged(evt);
//            }
//        });
//        scrollOptions.setViewportView(fishOptions);
//
//        scrollOptions.setBounds(20, 20, 140, 470);
//        jLayeredPane1.add(scrollOptions, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        scrollInTank.setBorder(null);
//
//        fishInTank.setBackground(new java.awt.Color(75, 188, 212));
//        fishInTank.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
//        fishInTank.setForeground(new java.awt.Color(102, 102, 102));
//        fishInTank.setModel(new javax.swing.AbstractListModel() {
//            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
//            public int getSize() { return strings.length; }
//            public Object getElementAt(int i) { return strings[i]; }
//        });
//        fishInTank.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
//        fishInTank.setSelectedIndex(0);
//        fishInTank.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
//            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
//                fishInTankValueChanged(evt);
//            }
//        });
//        scrollInTank.setViewportView(fishInTank);
//
//        scrollInTank.setBounds(15, 20, 140, 470);
//        jLayeredPane1.add(scrollInTank, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        addFish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonaddfish.png"))); // NOI18N
//        addFish.setContentAreaFilled(false);
//        addFish.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledaddfish.png"))); // NOI18N
//        addFish.setEnabled(false);
//        addFish.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        addFish.setIconTextGap(0);
//        addFish.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloveraddfish.png"))); // NOI18N
//        addFish.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectaddfish.png"))); // NOI18N
//        addFish.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                addFishActionPerformed(evt);
//            }
//        });
//        addFish.setBounds(10, 10, 148, 61);
//        jLayeredPane1.add(addFish, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        feedFish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonfeedfish.png"))); // NOI18N
//        feedFish.setContentAreaFilled(false);
//        feedFish.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledfishhealth.png"))); // NOI18N
//        feedFish.setEnabled(false);
//        feedFish.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        feedFish.setIconTextGap(0);
//        feedFish.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverfeedfish.png"))); // NOI18N
//        feedFish.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectfeedfish.png"))); // NOI18N
//        feedFish.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                feedFishActionPerformed(evt);
//            }
//        });
//        feedFish.setBounds(10, 70, 148, 61);
//        jLayeredPane1.add(feedFish, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        cleanTank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttoncleantank.png"))); // NOI18N
//        cleanTank.setContentAreaFilled(false);
//        cleanTank.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledcleantank.png"))); // NOI18N
//        cleanTank.setEnabled(false);
//        cleanTank.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        cleanTank.setIconTextGap(0);
//        cleanTank.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrollovercleantank.png"))); // NOI18N
//        cleanTank.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectcleantank.png"))); // NOI18N
//        cleanTank.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                cleanTankActionPerformed(evt);
//            }
//        });
//        cleanTank.setBounds(10, 130, 148, 61);
//        jLayeredPane1.add(cleanTank, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        changeWater.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonchangewater.png"))); // NOI18N
//        changeWater.setContentAreaFilled(false);
//        changeWater.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledchangewater.png"))); // NOI18N
//        changeWater.setEnabled(false);
//        changeWater.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        changeWater.setIconTextGap(0);
//        changeWater.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverchangewater.png"))); // NOI18N
//        changeWater.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectchangewater.png"))); // NOI18N
//        changeWater.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                changeWaterActionPerformed(evt);
//            }
//        });
//        changeWater.setBounds(10, 190, 148, 61);
//        jLayeredPane1.add(changeWater, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        checkStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttoncheckstatus.png"))); // NOI18N
//        checkStatus.setContentAreaFilled(false);
//        checkStatus.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledcheckstatus.png"))); // NOI18N
//        checkStatus.setEnabled(false);
//        checkStatus.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        checkStatus.setIconTextGap(0);
//        checkStatus.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrollovercheckstatus.png"))); // NOI18N
//        checkStatus.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectcheckstatus.png"))); // NOI18N
//        checkStatus.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                checkStatusActionPerformed(evt);
//            }
//        });
//        checkStatus.setBounds(10, 250, 148, 61);
//        jLayeredPane1.add(checkStatus, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        elapseTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonelapsetime.png"))); // NOI18N
//        elapseTime.setContentAreaFilled(false);
//        elapseTime.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledelapsetime.png"))); // NOI18N
//        elapseTime.setEnabled(false);
//        elapseTime.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        elapseTime.setIconTextGap(0);
//        elapseTime.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverelapsetime.png"))); // NOI18N
//        elapseTime.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectelapsetime.png"))); // NOI18N
//        elapseTime.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                elapseTimeActionPerformed(evt);
//            }
//        });
//        elapseTime.setBounds(10, 310, 148, 61);
//        jLayeredPane1.add(elapseTime, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        makeTank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonmaketank.png"))); // NOI18N
//        makeTank.setAlignmentY(0.0F);
//        makeTank.setContentAreaFilled(false);
//        makeTank.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledmaketank.png"))); // NOI18N
//        makeTank.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        makeTank.setIconTextGap(0);
//        makeTank.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrollovermaketank.png"))); // NOI18N
//        makeTank.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectmaketank.png"))); // NOI18N
//        makeTank.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                makeTankActionPerformed(evt);
//            }
//        });
//        makeTank.setBounds(10, 370, 148, 61);
//        jLayeredPane1.add(makeTank, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonhelp.png"))); // NOI18N
//        help.setContentAreaFilled(false);
//        help.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledhelp.png"))); // NOI18N
//        help.setEnabled(false);
//        help.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        help.setIconTextGap(0);
//        help.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverhelp.png"))); // NOI18N
//        help.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselecthelp.png"))); // NOI18N
//        help.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                helpActionPerformed(evt);
//            }
//        });
//        help.setBounds(10, 430, 148, 61);
//        jLayeredPane1.add(help, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        sliderMax.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
//        sliderMax.setForeground(new java.awt.Color(102, 102, 102));
//        sliderMax.setText("label2");
//        sliderMax.setBounds(630, 400, 46, 22);
//        jLayeredPane1.add(sliderMax, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        sliderMin.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
//        sliderMin.setForeground(new java.awt.Color(102, 102, 102));
//        sliderMin.setText("label1");
//        sliderMin.setBounds(240, 400, 31, 20);
//        jLayeredPane1.add(sliderMin, javax.swing.JLayeredPane.DEFAULT_LAYER);
//        inputField1.setBounds(260, 400, 360, 30);
//        jLayeredPane1.add(inputField1, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        slider1.setMajorTickSpacing(1);
//        slider1.setSnapToTicks(true);
//        slider1.setBounds(260, 400, 365, 23);
//        jLayeredPane1.add(slider1, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        option5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2no.png"))); // NOI18N
//        option5.setContentAreaFilled(false);
//        option5.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2disabled.png"))); // NOI18N
//        option5.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        option5.setIconTextGap(0);
//        option5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverno.png"))); // NOI18N
//        option5.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectno.png"))); // NOI18N
//        option5.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                option5ActionPerformed(evt);
//            }
//        });
//        option5.setBounds(470, 440, 128, 45);
//        jLayeredPane1.add(option5, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        option2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2medium.png"))); // NOI18N
//        option2.setContentAreaFilled(false);
//        option2.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2disabled.png"))); // NOI18N
//        option2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        option2.setIconTextGap(0);
//        option2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rollovermedium.png"))); // NOI18N
//        option2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectmedium.png"))); // NOI18N
//        option2.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                option2ActionPerformed(evt);
//            }
//        });
//        option2.setBounds(380, 440, 128, 45);
//        jLayeredPane1.add(option2, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        option3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2large.png"))); // NOI18N
//        option3.setContentAreaFilled(false);
//        option3.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2disabled.png"))); // NOI18N
//        option3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        option3.setIconTextGap(0);
//        option3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverlarge.png"))); // NOI18N
//        option3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectlarge.png"))); // NOI18N
//        option3.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                option3ActionPerformed(evt);
//            }
//        });
//        option3.setBounds(510, 440, 128, 45);
//        jLayeredPane1.add(option3, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        option4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2yes.png"))); // NOI18N
//        option4.setContentAreaFilled(false);
//        option4.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2disabled.png"))); // NOI18N
//        option4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        option4.setIconTextGap(0);
//        option4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloveryes.png"))); // NOI18N
//        option4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectyes.png"))); // NOI18N
//        option4.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                option4ActionPerformed(evt);
//            }
//        });
//        option4.setBounds(290, 440, 128, 45);
//        jLayeredPane1.add(option4, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        option1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2small.png"))); // NOI18N
//        option1.setContentAreaFilled(false);
//        option1.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2disabled.png"))); // NOI18N
//        option1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
//        option1.setIconTextGap(0);
//        option1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloversmall.png"))); // NOI18N
//        option1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectsmall.png"))); // NOI18N
//        option1.addActionListener(new java.awt.event.ActionListener() {
//            public void actionPerformed(java.awt.event.ActionEvent evt) {
//                option1ActionPerformed(evt);
//            }
//        });
//        option1.setBounds(250, 440, 128, 45);
//        jLayeredPane1.add(option1, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        scrollOutput.setBorder(null);
//        scrollOutput.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
//
//        output.setEditable(false);
//        output.setBackground(new java.awt.Color(147, 224, 224));
//        output.setColumns(20);
//        output.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
//        output.setForeground(new java.awt.Color(102, 102, 102));
//        output.setRows(3);
//        output.setBorder(null);
//        scrollOutput.setViewportView(output);
//
//        scrollOutput.setBounds(180, 300, 520, 60);
//        jLayeredPane1.add(scrollOutput, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        addBG.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/background3.png"))); // NOI18N
//        addBG.setBounds(0, 0, 720, 510);
//        jLayeredPane1.add(addBG, javax.swing.JLayeredPane.DEFAULT_LAYER);
//
//        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
//        getContentPane().setLayout(layout);
//        layout.setHorizontalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 715, Short.MAX_VALUE)
//        );
//        layout.setVerticalGroup(
//            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
//            .addComponent(jLayeredPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
//        );
//
//        pack();
//    }// </editor-fold>//GEN-END:initComponents
//  
//    private void hideBottom(){
//        option1.setVisible(false);
//        option2.setVisible(false);
//        option3.setVisible(false);
//        option4.setVisible(false);
//        option5.setVisible(false);
//        slider1.setVisible(false);
//        sliderMin.setText("");
//        sliderMax.setText(""); 
//        inputField1.setVisible(false);
//    }
//    
//    private void hideTop(){
//        tankVisuals.setVisible(true);
//        statusInfo1.setVisible(false);
//        statusInfo2.setVisible(false);
//        healthBar.setVisible(false);
//        hungerBar.setVisible(false);
//        happinessBar.setVisible(false);
//        previewPane.setVisible(false);
//    }
//    
//    private void showTop(String much){
//            tankVisuals.setVisible(false);
//            statusInfo1.setVisible(true);
//            statusInfo2.setVisible(true);
//            statusInfo1.setText("");
//            statusInfo2.setText("");
//        if (much == "all"){
//            previewPane.setVisible(true);
//            healthBar.setVisible(true);
//            hungerBar.setVisible(true);
//            happinessBar.setVisible(true);
//        }
//        if(much == "pic"){
//            previewPane.setVisible(true);
//            healthBar.setVisible(false);
//            hungerBar.setVisible(false);
//            happinessBar.setVisible(false);
//        }
//        if(much == "info"){
//            previewPane.setVisible(false);
//            healthBar.setVisible(false);
//            hungerBar.setVisible(false);
//            happinessBar.setVisible(false);
//        }
//    }
//    
//    private void useSlider(int min, int max){
//        option4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2ok.png")));
//        option4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverok.png")));
//        option4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectok.png")));
//        option5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2cancel.png")));
//        option5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rollovercancel.png")));
//        option5.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectcancel.png")));
//        option1.setVisible(false);
//        option2.setVisible(false);
//        option3.setVisible(false);
//        option4.setVisible(true);
//        option5.setVisible(true);
//        slider1.setVisible(true);
//        slider1.setMinimum(min);
//        slider1.setMaximum(max);
//        sliderMin.setText(Integer.toString(min));
//        sliderMax.setText(Integer.toString(max));
//        inputField1.setVisible(false);
//    }
//    
//    private void use2(String which){
//        slider1.setVisible(false);
//        if(which == "YN"){
//            option1.setVisible(false);
//            option2.setVisible(false);
//            option3.setVisible(false);
//            option4.setVisible(true);
//            option5.setVisible(true);
//            option4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2yes.png")));
//            option4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloveryes.png")));
//            option4.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectyes.png")));
//            option5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2no.png")));
//            option5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverno.png")));
//            option5.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectno.png")));
//        }
//        if(which == "add"){
//            option1.setVisible(true);
//            option2.setVisible(false);
//            option3.setVisible(true);
//            option4.setVisible(false);
//            option5.setVisible(false);
//            option1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2addselected.png")));
//            option1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloveraddselected.png")));
//            option1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectaddselected.png")));
//            option3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2done.png")));
//            option3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverdone.png")));
//            option3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectdone.png")));
//        }
//        sliderMin.setText("");
//        sliderMax.setText("");
//        inputField1.setVisible(false);
//    }
//    
//    private void use3(String which){
//        if(which == "size"){
//            option1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2small.png")));
//            option1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloversmall.png")));
//            option1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectsmall.png")));
//            option2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2medium.png")));
//            option2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rollovermedium.png")));
//            option2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectmedium.png")));
//            option3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2large.png")));
//            option3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverlarge.png")));
//            option3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectlarge.png")));
//        }
//        if(which == "time"){
//            option1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2minutes.png")));
//            option1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverminutes.png")));
//            option1.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectminutes.png")));
//            option2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2hours.png")));
//            option2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverhours.png")));
//            option2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selecthours.png")));
//            option3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2days.png")));
//            option3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverdays.png")));
//            option3.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectdays.png")));
//        }
//        option1.setVisible(true);
//        option2.setVisible(true);
//        option3.setVisible(true);
//        option4.setVisible(false);
//        option5.setVisible(false);
//        slider1.setVisible(false);
//        sliderMin.setText("");
//        sliderMax.setText("");
//        inputField1.setVisible(false);
//    }
//    
//    private void useText(){
//        option1.setVisible(false);
//        option2.setVisible(true);
//        option3.setVisible(false);
//        option4.setVisible(false);
//        option5.setVisible(false);
//        slider1.setVisible(false);
//        inputField1.setVisible(true);
//        option2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2ok.png")));
//        option2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverok.png")));
//        option2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectok.png")));
//        sliderMin.setText("");
//        sliderMax.setText("");
//    }
//    
//    void initGraphic(Fish aFish){
//        this.tankVisuals.add(aFish.sprite, javax.swing.JLayeredPane.DEFAULT_LAYER);
//        Random generator = new Random();
//        int x = generator.nextInt(334);
//        int y = generator.nextInt(54);
//        aFish.sprite.setBounds(x, y, 200, 100); 
//        this.tankVisuals.validate();
//    }
//    
//    void previewImage(int i){
//        javax.swing.JLabel img = this.allSprites.get(i);
//        this.previewPane.add(img);
//        img.setBounds(0,0,200,100);
//        this.previewPane.validate();
//        this.allSprites.clear();
//        this.initAllSprites();
//    }
//    
//    void initAllPossible(){
//        //allPossible.add(new BristlenosePlec());
////        allPossible.add(new CherryBarb());
//        //allPossible.add(new CherryShrimp());
//        //allPossible.add(new DwarfPuffer());
//        //allPossible.add(new CoryCatfish());
//        //allPossible.add(new GoldBarb());
//        //allPossible.add(new GlassFish());
//        //allPossible.add(new IncaSnail());
//        allPossible.add(new Guppy());
//        //allPossible.add(new KuhliLoach());
//        //allPossible.add(new NeonTetra());
//        //allPossible.add(new OtoCatfish());
//        //allPossible.add(new Platy());
////        allPossible.add(new WhiteCloudMountainMinnow());
//    }
//    
//    void initAllSprites(){
//        javax.swing.JLabel CherryBarb = new javax.swing.JLabel();
//        CherryBarb.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/cherrybarb.png")));
//        CherryBarb.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/cherrybarbflip.png")));
//        allSprites.add(CherryBarb);
//        javax.swing.JLabel Guppy = new javax.swing.JLabel();
//        Guppy.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/EndlersLivebearer.png")));
//        Guppy.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/EndlersLivebearerflip.png")));
//        allSprites.add(Guppy);
//        javax.swing.JLabel WhiteCloudMountainMinnow = new javax.swing.JLabel();
//        WhiteCloudMountainMinnow.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/whiteminnow.png")));
//        WhiteCloudMountainMinnow.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/whiteminnowflip.png")));
//        allSprites.add(WhiteCloudMountainMinnow); 
//    }
//    
//    /*void endPreview(Fish aFish){
//        this.previewPane.remove(aFish.sprite);
//        initGraphic(aFish);
//    }*/
//    
//    void helpMenu(){
//        statusInfo1.setVisible(true);
//        statusInfo2.setVisible(false);
//        tankVisuals.setVisible(false);
//        flag = "help";
//        flag2 = "help";
//        addFish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonph.png")));
//        addFish.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverph.png")));
//        addFish.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectph.png")));
//        addFish.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledph.png")));
//        feedFish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttontemperature.png")));
//        feedFish.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrollovertemperature.png")));
//        feedFish.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselecttemperature.png")));
//        feedFish.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledtemperature.png")));
//        cleanTank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonhardness.png")));
//        cleanTank.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverhardness.png")));
//        cleanTank.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselecthardness.png")));
//        cleanTank.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledhardness.png")));
//        changeWater.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonnitrogencycle.png")));
//        changeWater.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrollovernitrogencycle.png")));
//        changeWater.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectnitrogencycle.png")));
//        changeWater.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisablednitrogencycle.png")));
//        checkStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonbacteria.png")));
//        checkStatus.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverbacteria.png")));
//        checkStatus.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectbacteria.png")));
//        checkStatus.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledbacteria.png")));
//        elapseTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondissolvedgases.png")));
//        elapseTime.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverdissolvedgases.png")));
//        elapseTime.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectdissolvedgases.png")));
//        elapseTime.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisableddissolvedgases.png")));
//        makeTank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonwaterchange.png")));
//        makeTank.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverwaterchange.png")));
//        makeTank.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectwaterchange.png")));
//        makeTank.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledwaterchange.png")));
//        help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonfishhealth.png")));
//        help.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverfishhealth.png")));
//        help.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectfishhealth.png")));
//        help.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledfishhealth.png")));
//    }
//    
//    void mainMenu(){
//        flag2 = "main";
//        hideTop();
//        addFish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonaddfish.png")));
//        addFish.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloveraddfish.png")));
//        addFish.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectaddfish.png")));
//        addFish.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledaddfish.png")));
//        feedFish.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonfeedfish.png")));
//        feedFish.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverfeedfish.png")));
//        feedFish.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectfeedfish.png")));
//        feedFish.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledfeedfish.png")));
//        cleanTank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttoncleantank.png")));
//        cleanTank.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrollovercleantank.png")));
//        cleanTank.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectcleantank.png")));
//        cleanTank.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledcleantank.png")));
//        changeWater.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonchangewater.png")));
//        changeWater.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverchangewater.png")));
//        changeWater.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectchangewater.png")));
//        changeWater.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledchangewater.png")));
//        checkStatus.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttoncheckstatus.png")));
//        checkStatus.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrollovercheckstatus.png")));
//        checkStatus.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectcheckstatus.png")));
//        checkStatus.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledcheckstatus.png")));
//        elapseTime.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonelapsetime.png")));
//        elapseTime.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverelapsetime.png")));
//        elapseTime.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectelapsetime.png")));
//        elapseTime.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledelapsetime.png")));
//        makeTank.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonmaketank.png")));
//        makeTank.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrollovermaketank.png")));
//        makeTank.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselectmaketank.png")));
//        makeTank.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledmaketank.png")));
//        help.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonhelp.png")));
//        help.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonrolloverhelp.png")));
//        help.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttonselecthelp.png")));
//        help.setDisabledIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/buttondisabledhelp.png")));
//    }
//    
//    private void addFishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addFishActionPerformed
//        if(flag2 == "main"){
//        flag = "addFish";
//        scrollOptions.setVisible(true);
//        addFish.setVisible(false);
//        feedFish.setVisible(false);
//        cleanTank.setVisible(false);
//        changeWater.setVisible(false);
//        checkStatus.setVisible(false);
//        elapseTime.setVisible(false);
//        makeTank.setVisible(false);
//        help.setVisible(false);
//        use2("add");        
//        output.setText("Select a fish on left and press add selected to add to tank.\n"
//                    + "Press finish to return to main menu.");
//        }
//        if(flag2 == "help"){
//            statusInfo1.setText("pH refers to the acidity of the tank water. Each fish has a range of pH's in which it can\n"
//                    + "survive. pH will usually tend to rise naturally over time, but is lowered by the presence of\n"
//                    + "waste and food in the water.");
//        }
//    }//GEN-LAST:event_addFishActionPerformed
//
//    private void feedFishActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_feedFishActionPerformed
//        if(flag2 == "main"){
//        flag = "feedFish";
//        output.setText("How much food to add?");
//        useSlider(1, 20);
//        }
//        if(flag2=="help"){
//            statusInfo1.setText("Water temperature is initially 24 degrees C but will tend toward room temperature, which is\n"
//                    + "set at 22 degrees. Each fish has a range of temperatures in which it can survive. If you need\n"
//                    + "warmer water, try a water change. The added water is 24 degrees.");
//        }
//    }//GEN-LAST:event_feedFishActionPerformed
//
//    private void cleanTankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanTankActionPerformed
//        if(flag2=="main"){
//        flag = "cleanTank";
//        output.setText("Clean all excess food and waste from tank?");
//        use2("YN");
//        }
//        if(flag2=="help"){
//            statusInfo1.setText("Water hardness is a measure of how many minerals are dissolved in the water. Each fish has\n"
//                    + "a range of hardnesses that it prefers. Because the floor of the aquarium is covered in rocks\n"
//                    + "hardness tends to be proportionate to the size of the aquarium floor. It will fluctuate\nnaturally.");
//        }
//    }//GEN-LAST:event_cleanTankActionPerformed
//
//    private void changeWaterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_changeWaterActionPerformed
//        if(flag2=="main"){
//        flag = "changeWater";
//        output.setText("What percentage of the water should be changed?");
//        useSlider(1, 100);
//        }
//        if(flag2=="help"){
//            statusInfo1.setText("Waste and excess food break down into ammonia, which is toxic to fish. Bacteria will grow\n"
//                    + "to convert ammonia into a less deadly substance, nitrite. A different sort of bacteria will\n"
//                    + "convert nitrite into mostly harmless nitrates. Some kinds of fish tolerate these compounds\n"
//                    + "better than others. Cut down on all of these compounds by keeping your tank clean!");            
//        }
//    }//GEN-LAST:event_changeWaterActionPerformed
//
//    private void checkStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkStatusActionPerformed
//        if(flag2=="main"){
//        flag = "checkStatus";
//        output.setText("Check status of which?");
//        fishInTank.setListData(this.userTank.displayNames.toArray());
//            scrollInTank.setVisible(true);
//            addFish.setVisible(false);
//            feedFish.setVisible(false);
//            cleanTank.setVisible(false);
//            changeWater.setVisible(false);
//            checkStatus.setVisible(false);
//            elapseTime.setVisible(false);
//            makeTank.setVisible(false);
//            help.setVisible(false);
//            hideBottom();
//            option2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2done.png")));
//            option2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rolloverdone.png")));
//            option2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectdone.png")));
//            option2.setVisible(true); 
//        }
//        if(flag2=="help"){
//            statusInfo1.setText("Nitrosomonas bacteria convert ammonia to nitrite. Nitrobacter bacteria convert nitrite to\n"
//                    + "nitrate. The bacteria are harmless, and in fact their work is beneficial to your tank chemistry.\n"
//                    + "Their populations rise when they have a lot of their corresponding chemicals to 'eat!'");            
//        }
//    }//GEN-LAST:event_checkStatusActionPerformed
//
//    private void elapseTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_elapseTimeActionPerformed
//        if(flag2=="main"){
//        flag = "elapseTime1";
//        output.setText("What unit of time to elapse?");
//        use3("time");
//        }
//        if(flag2=="help"){
//            statusInfo1.setText("Dissolved O2 and CO2 are influenced by the ratio of fish to plants and the surface area of\n"
//                    + "the tank's top. In the current version of the game, each tank has 1 plant. The fish are not\n"
//                    + "directly affected by these levels, but their values do impact other aspects of tank chemistry.\n"
//                    + "Increase the O2:CO2 ratio by keeping fewer fish or using a tank with a larger surface.");
//        }
//    }//GEN-LAST:event_elapseTimeActionPerformed
//
//    private void makeTankActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_makeTankActionPerformed
//        if(flag2=="main"){
//        if(addFish.isEnabled()){
//            flag = "newTank";
//            output.setText("Are you sure you want to scrap your current tank and create a new one?");
//            use2("YN");
//        }
//        else{
//            flag = "makeTank"; //flags used to tell which options the buttons are doing
//            output.setText("Choose what size tank you would like.\n");
//            use3("size");
//        }
//        }
//        if(flag2=="help"){
//            statusInfo1.setText("Water changes replace some percentage of the tank water with water that is the same as\n"
//                    + "the beginning water. That is, a 100% water change will restore the water chemistry to its\n"
//                    + "original state. This isn't necessarily a good thing! In its original state, water lacks the\n"
//                    + "beneficial bacteria that fuel the nitrogen cycle. Also, some fish don't like water that is too\n"
//                    + "'neutral.' But smaller water changes can help keep a tank healthy.");
//            
//        }
//    }//GEN-LAST:event_makeTankActionPerformed
//
//    private void option1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option1ActionPerformed
//        //small, minutes, add selected
//        if(flag == "makeTank"){
//            userTank = new Tank(30, 15, 20);
//            output.setText("Small tank created. Now add some fish!");
//            hideBottom();
//            addFish.setEnabled(true);
//            feedFish.setEnabled(true);
//            cleanTank.setEnabled(true);
//            changeWater.setEnabled(true);
//            checkStatus.setEnabled(true);
//            elapseTime.setEnabled(true);
//            help.setEnabled(true);
//        }
//        if(flag == "elapseTime1"){
//            flag = "elapseMinutes";
//            useSlider(10,60);
//            output.setText("How many minutes should elapse?");
//        }
//        
//        if(flag == "addFish"){
//            String choice = fishOptions.getSelectedValue().toString();
//            
//            if(choice != "FishOptions"){
//                for(Fish f: allPossible){
//                    if(f.name == choice){
//                        
//                        boolean compatible = true;
//                        String reasons = "Not recommended for the following reasons: \n";
//                        /*String temp = userTank.loneRecommendation(f);
//                        if(temp != "compatible"){
//                            compatible = false;
//                            reasons += temp;
//                        }*/
//                        for(Fish f2: userTank.fish){
//                            String temp = userTank.isCompatible(f, f2);
//                            if(temp != "compatible"){
//                                compatible = false;
//                                reasons += temp;
//                            }     
//                        }
//                        if (compatible){ 
//                           userTank.addFish(f); //same instance of fish from allPossible
//                           initGraphic(f);
//                           output.setText(choice + " added to tank.\nNow give it a name!"); 
//                           flag="nickname";
//                           useText();
//                        }
//                        else{
//                            flag = "addAnyway";
//                            maybe = f;                                
//                            output.setText(reasons +"Proceed anyway?");
//                            use2("YN");                              
//                        }
//                    }
//                }
//                allPossible.clear();
//                this.initAllPossible();
//            }
//        }
//    }//GEN-LAST:event_option1ActionPerformed
//
//    private void option2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option2ActionPerformed
//        //medium, hours, OK for nickname, Done, main menu
//        if(flag == "makeTank"){
//            userTank = new Tank(60, 30, 40);
//            output.setText("Medium tank created. Now add some fish!");
//            hideBottom();
//            addFish.setEnabled(true);
//            feedFish.setEnabled(true);
//            cleanTank.setEnabled(true);
//            changeWater.setEnabled(true);
//            checkStatus.setEnabled(true);
//            elapseTime.setEnabled(true);
//            help.setEnabled(true);
//        }
//        if(flag == "elapseTime1"){
//            flag = "elapseHours";
//            useSlider(1,24);
//            output.setText("How many hours should elapse?");
//        }
//        if(flag == "nickname"){
//            String nickname = inputField1.getText();
//            if(nickname.length() == 0){
//                nickname = "Swimmy";
//            }
//            userTank.fish.getLast().nickname = nickname;           
//            inputField1.setText("");
//            userTank.displayNames.add(nickname + " (" + userTank.fish.getLast().name + ")");
//            flag = "addFish";
//            fishOptions.setSelectedIndex(0);
//            use2("add");
//        }
//        if(flag == "checkStatus"){
//            scrollInTank.setVisible(false);
//            addFish.setVisible(true);
//            feedFish.setVisible(true);
//            cleanTank.setVisible(true);
//            changeWater.setVisible(true);
//            checkStatus.setVisible(true);
//            elapseTime.setVisible(true);
//            makeTank.setVisible(true);
//            help.setVisible(true);
//            output.setText("");
//            hideTop();
//            hideBottom();
//        }
//        if(flag == "help"){
//            mainMenu();
//            output.setText("");
//        }
//    }//GEN-LAST:event_option2ActionPerformed
//
//    private void option3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option3ActionPerformed
//        //large, days, done for add fish
//        if(flag == "makeTank"){
//            userTank = new Tank(90, 45, 60);
//            output.setText("Large tank created. Now add some fish!");
//            hideBottom();
//            addFish.setEnabled(true);
//            feedFish.setEnabled(true);
//            cleanTank.setEnabled(true);
//            changeWater.setEnabled(true);
//            checkStatus.setEnabled(true);
//            elapseTime.setEnabled(true);
//            help.setEnabled(true);
//        }
//      
//        if(flag == "elapseTime1"){
//            flag = "elapseDays";
//            useSlider(1,7);
//            output.setText("How many days should elapse?");
//        }
//        
//        if(flag == "addFish"){
//            output.setText("Done adding fish.");
//            scrollOptions.setVisible(false);
//            addFish.setVisible(true);
//            feedFish.setVisible(true);
//            cleanTank.setVisible(true);
//            changeWater.setVisible(true);
//            checkStatus.setVisible(true);
//            elapseTime.setVisible(true);
//            makeTank.setVisible(true);
//            help.setVisible(true);
//            hideTop();
//            hideBottom();
//        }
//    }//GEN-LAST:event_option3ActionPerformed
//
//    private void option4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option4ActionPerformed
//        // OK, yes
//        if(flag == "feedFish"){
//            userTank.feeding(slider1.getValue());
//            output.setText(slider1.getValue() + " food pieces added.");
//            hideBottom();
//        }
//        if(flag == "cleanTank"){
//            userTank.cleaning();
//            output.setText("Tank cleaned.");
//            hideBottom();
//        }
//        if(flag == "changeWater"){
//            userTank.waterChange(slider1.getValue());
//            output.setText(slider1.getValue() + "% water change completed.");
//            hideBottom();
//        }
//
//        if(flag == "elapseMinutes"){
//            LinkedList<Integer> removals = userTank.timeLapse(slider1.getValue());
//            for(Integer i: removals){
//                this.tankVisuals.remove(i);
//            }
//            output.setText(slider1.getValue() + " minutes elapsed.");
//            hideBottom();
//        }
//        if(flag == "elapseHours"){
//            LinkedList<Integer> removals = userTank.timeLapse(slider1.getValue() * 60);
//            for(Integer i: removals){
//                this.tankVisuals.remove(i);
//            }
//            output.setText(slider1.getValue() + " hours elapsed.");
//            hideBottom();
//        }
//        if(flag == "elapseDays"){
//            LinkedList<Integer> removals = userTank.timeLapse(slider1.getValue() * 1440);
//            for(Integer i: removals){
//                this.tankVisuals.remove(i);
//            }
//            output.setText(slider1.getValue() + " days elapsed.");
//            hideBottom();
//        }
//        if(flag == "addAnyway"){
//            flag = "nickname";
//            userTank.addFish(maybe);
//            initGraphic(maybe);
//            output.setText(maybe.name + " added to tank.\nNow give it a name!");
//            maybe = null;
//            useText();
//        }
//        if(flag == "newTank"){
//            tankVisuals.removeAll();
//            flag = "makeTank";
//            addFish.setEnabled(false);
//            feedFish.setEnabled(false);
//            cleanTank.setEnabled(false);
//            changeWater.setEnabled(false);
//            checkStatus.setEnabled(false);
//            elapseTime.setEnabled(false);
//            help.setEnabled(false);
//            output.setText("Choose what size tank you would like.\n");
//            use3("size");
//        }
//        
//    }//GEN-LAST:event_option4ActionPerformed
//
//    private void option5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_option5ActionPerformed
//        // cancel, no
//        if(flag == "feedFish"){
//            output.setText("Feeding cancelled.");
//            hideBottom();
//        }
//        if(flag == "changeWater"){
//            output.setText("Water change cancelled.");
//            hideBottom();
//        }
//        if(flag == "elapseMinutes" || flag == "elapseHours" || flag == "elapseDays"){
//            output.setText("Time elapse cancelled.");
//            hideBottom();
//        }
//        if(flag == "newTank"){
//            output.setText("Keeping old tank.");
//            hideBottom();
//        }
//        if(flag == "addAnyway"){
//            flag = "addFish";
//            maybe = null;
//            output.setText("Fish addition cancelled.");
//            use2("add");            
//        }
//        if(flag == "cleanTank"){
//            output.setText("Cleaning cancelled.");
//            hideBottom();
//        }
//        
//    }//GEN-LAST:event_option5ActionPerformed
//
//    private void fishOptionsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_fishOptionsValueChanged
//        String choice = fishOptions.getSelectedValue().toString();
//        previewPane.removeAll();
//        showTop("pic");
//        output.setText("Select a fish on left and press add selected to add to tank.\n"
//                + "Press finish to return to main menu.");
//        if(userTank.cmFish > 0){
//            statusInfo2.setText("Your tank currently contains:");
//            for(Fish f: userTank.fish){
//                statusInfo2.append("\n"+f.name);
//            }
//        }
//        if(choice != "Fish Options"){
//            int j = 0;
//            for(Fish f: allPossible){
//                if(f.name == choice){
//                    previewImage(j);
//                    statusInfo1.setText(f.name +
//                            "\nEase: " + f.ease + "/5" +
//                            "\nSize: " + f.size + " cm" +
//                            "\npH Range: " + f.minPH + "-" + f.maxPH +
//                            "\nTemperature Range: " + f.minTemp + "-" + f.maxTemp + " C" +
//                            "\nHardness Range: " + f.minHard + "-" + f.maxHard + " ppm" +
//                            "\nPeacefulness: " + f.peacefulness + "/5" +
//                            "\nMinimum tank size: " + f.tankSize + " L" +
//                            "\nAmmonia levels tolerated: <" + f.ammonia + " ppm" +
//                            "\nNitrite levels tolerated: <" + f.nitrite + " ppm" +
//                            "\nNitrate levels tolerated: <" + f.nitrate + " ppm");
//                }
//                j++;
//            }
//        }
//    }//GEN-LAST:event_fishOptionsValueChanged
//
//    private void helpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpActionPerformed
//        if(flag2=="main"){
//            helpMenu();
//            hideBottom();
//            output.setText("What topic would you like to know more about?");
//            option2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2mainmenu.png")));
//            option2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2rollovermainmenu.png")));
//            option2.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/learn/button2selectmainmenu.png")));
//            option2.setVisible(true);
//        }
//        if(flag2=="help"){
//            statusInfo1.setText("This game has an added layer of complexity over most aquarium games in that it attempts\n"
//                    + "to simulate real fish tank chemistry. For tips on keeping your fish happy and healthy, read\n"
//                    + "this guide!\n\n"
//                    + "Fish become unhappy when any aspect of the tank's water chemistry is outside their\n"
//                    + "preferred ranges. They also become steadily hungrier with time. Hunger begins to affect a\n"
//                    + "fish's wellbeing when its hunger bar reaches halfway. If a fish becomes too unhappy or\n"
//                    + "hungry, it will lose some health. It can also lose health or die if placed in a tank with fish\n"
//                    + "that bully it!\n\n"
//                    + "If a fish is full and happy for an entire day, it will regain some health.");
//        }
//    }//GEN-LAST:event_helpActionPerformed
//
//    private void fishInTankValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_fishInTankValueChanged
//        previewPane.removeAll();
//        if(fishInTank.getSelectedIndex() == 0){
//            showTop("info");            
//            statusInfo1.setText("pH: " + (double) Math.round((float) userTank.pH*100)/100.0 +
//                    "\nTemperature: " + (double) Math.round((float) userTank.temp*100)/100.0 + " C" +
//                    "\nHardness: " + (double) Math.round((float) userTank.hardness*100)/100.0 + " ppm" +
//                    "\nAmmonia: " + (double) Math.round((float) userTank.ammonia*100)/100.0 + " ppm" +
//                    "\nNitrite: " + (double) Math.round((float) userTank.nitrite*100)/100.0 + " ppm" +
//                    "\nNitrate: " + (double) Math.round((float) userTank.nitrate*100)/100.0 + " ppm" +
//                    "\nDissolved O2: " + (double) Math.round((float) userTank.o2*100)/100.0 + " percent" +
//                    "\nDissolved CO2: " + (double) Math.round((float) userTank.co2*100)/100.0 + " percent" +
//                    "\nNitrosomonas: " + (double) Math.round((float) userTank.nitrosomonas) + " bacteria" +
//                    "\nNitrobacter: " + (double) Math.round((float) userTank.nitrobacter) + " bacteria" +
//                    "\nFood: " + (double) Math.round((float) userTank.food*100)/100.0 + " noms" +
//                    "\nWaste: " + (double) Math.round((float) userTank.waste*100)/100.0 + " poops");
//        }
//        if(fishInTank.getSelectedIndex() > 0){
//            Fish aFish = userTank.fish.get(fishInTank.getSelectedIndex()-1);
//            showTop("all");
//            int j = 0;
//            for(Fish f: allPossible){
//                if(aFish.name == f.name){
//                    previewImage(j);
//                }
//                j++;
//            }
//            statusInfo1.setText(aFish.nickname + " (" + aFish.name + ")" +
//                    "\n\nHealth reduction will occur if\nhunger bar becomes full or\nhappiness bar becomes empty.\n"
//                    + "Death will occur if\nhealth bar becomes empty.");
//            statusInfo2.setText(userTank.happyFish(aFish));
//            healthBar.setValue(aFish.health);
//            hungerBar.setMaximum(aFish.ease*100);
//            hungerBar.setValue((int) (aFish.hunger*100));
//            happinessBar.setMaximum(24*60*aFish.ease);
//            happinessBar.setValue(aFish.happiness);
//        }
//    }//GEN-LAST:event_fishInTankValueChanged
//    
//    /**
//     * @param args the command line arguments
//     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(FishGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(FishGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(FishGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(FishGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new FishGUI().setVisible(true);
//            }
//        });
//    }
//    
//    // Variables declaration - do not modify//GEN-BEGIN:variables
//    private javax.swing.JLabel addBG;
//    private javax.swing.JButton addFish;
//    private javax.swing.JButton changeWater;
//    private javax.swing.JButton checkStatus;
//    private javax.swing.JButton cleanTank;
//    private javax.swing.JButton elapseTime;
//    private javax.swing.JButton feedFish;
//    private javax.swing.JList fishInTank;
//    private javax.swing.JList fishOptions;
//    private javax.swing.JProgressBar happinessBar;
//    private javax.swing.JProgressBar healthBar;
//    private javax.swing.JButton help;
//    private javax.swing.JProgressBar hungerBar;
//    private javax.swing.JTextField inputField1;
//    private javax.swing.JLayeredPane jLayeredPane1;
//    private javax.swing.JButton makeTank;
//    private javax.swing.JButton option1;
//    private javax.swing.JButton option2;
//    private javax.swing.JButton option3;
//    private javax.swing.JButton option4;
//    private javax.swing.JButton option5;
//    private javax.swing.JTextArea output;
//    private javax.swing.JPanel previewPane;
//    private javax.swing.JScrollPane scrollInTank;
//    private javax.swing.JScrollPane scrollOptions;
//    private javax.swing.JScrollPane scrollOutput;
//    private javax.swing.JSlider slider1;
//    private javax.swing.JLabel sliderMax;
//    private javax.swing.JLabel sliderMin;
//    private javax.swing.JTextArea statusInfo1;
//    private javax.swing.JTextArea statusInfo2;
//    private javax.swing.JLayeredPane tankVisuals;
//    // End of variables declaration//GEN-END:variables
//}
